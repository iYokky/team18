{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for SUT SE 2563",
        "title": "SUT SE Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/Customers": {
            "get": {
                "description": "list Customer entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List Customer entities",
                "operationId": "list-Customer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Customer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/DataRooms": {
            "get": {
                "description": "list DataRoom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List DataRoom entities",
                "operationId": "list-DataRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.DataRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/Promotions": {
            "get": {
                "description": "list Promotion entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List Promotion entities",
                "operationId": "list-Promotion",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.Promotion"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ReserveRooms": {
            "get": {
                "description": "list ReserveRoom entities",
                "produces": [
                    "application/json"
                ],
                "summary": "List ReserveRoom entities",
                "operationId": "list-ReserveRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.ReserveRoom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Create ReserveRoom",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create ReserveRoom",
                "operationId": "create-ReserveRoom",
                "parameters": [
                    {
                        "description": "ReserveRoom entity",
                        "name": "ReserveRoom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ReserveRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ReserveRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/ReserveRooms/{id}": {
            "get": {
                "description": "get ReserveRoom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a ReserveRoom entity by ID",
                "operationId": "get-ReserveRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ReserveRoom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ReserveRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "put": {
                "description": "update ReserveRoom by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a ReserveRoom entity by ID",
                "operationId": "update-ReserveRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ReserveRoom ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ReserveRoom entity",
                        "name": "ReserveRoom",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ent.ReserveRoom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ent.ReserveRoom"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "delete": {
                "description": "get ReserveRoom by ID",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a ReserveRoom entity by ID",
                "operationId": "delete-ReserveRoom",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ReserveRooms ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ent.CheckIn": {
            "type": "object",
            "properties": {
                "checkin_date": {
                    "description": "CheckinDate holds the value of the \"checkin_date\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CheckInQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CheckInEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.CheckInEdges": {
            "type": "object",
            "properties": {
                "checkouts": {
                    "description": "Checkouts holds the value of the checkouts edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Checkout"
                },
                "counter": {
                    "description": "Counter holds the value of the counter edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CounterStaff"
                },
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Customer"
                },
                "reserveroom": {
                    "description": "Reserveroom holds the value of the reserveroom edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ReserveRoom"
                }
            }
        },
        "ent.Checkout": {
            "type": "object",
            "properties": {
                "checkout_date": {
                    "description": "CheckoutDate holds the value of the \"checkout_date\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CheckoutQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CheckoutEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.CheckoutEdges": {
            "type": "object",
            "properties": {
                "checkins": {
                    "description": "Checkins holds the value of the checkins edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CheckIn"
                },
                "counterstaffs": {
                    "description": "Counterstaffs holds the value of the counterstaffs edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CounterStaff"
                },
                "statuss": {
                    "description": "Statuss holds the value of the statuss edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Status"
                }
            }
        },
        "ent.CounterStaff": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CounterStaffQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CounterStaffEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                },
                "password": {
                    "description": "Password holds the value of the \"password\" field.",
                    "type": "string"
                }
            }
        },
        "ent.CounterStaffEdges": {
            "type": "object",
            "properties": {
                "checkins": {
                    "description": "Checkins holds the value of the checkins edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CheckIn"
                    }
                },
                "checkouts": {
                    "description": "Checkouts holds the value of the checkouts edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Checkout"
                    }
                }
            }
        },
        "ent.Customer": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the CustomerQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.CustomerEdges"
                },
                "email": {
                    "description": "Email holds the value of the \"email\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "name": {
                    "description": "Name holds the value of the \"name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.CustomerEdges": {
            "type": "object",
            "properties": {
                "checkins": {
                    "description": "Checkins holds the value of the checkins edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CheckIn"
                    }
                },
                "fixs": {
                    "description": "Fixs holds the value of the fixs edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FixRoom"
                    }
                },
                "reserves": {
                    "description": "Reserves holds the value of the reserves edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ReserveRoom"
                    }
                }
            }
        },
        "ent.DataRoom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the DataRoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DataRoomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "price": {
                    "description": "Price holds the value of the \"price\" field.",
                    "type": "number"
                },
                "roomnumber": {
                    "description": "Roomnumber holds the value of the \"roomnumber\" field.",
                    "type": "string"
                }
            }
        },
        "ent.DataRoomEdges": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "Details holds the value of the details edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FurnitureDetail"
                    }
                },
                "fixs": {
                    "description": "Fixs holds the value of the fixs edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FixRoom"
                    }
                },
                "promotion": {
                    "description": "Promotion holds the value of the promotion edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Promotion"
                },
                "reserves": {
                    "description": "Reserves holds the value of the reserves edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ReserveRoom"
                    }
                },
                "statusroom": {
                    "description": "Statusroom holds the value of the statusroom edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusRoom"
                },
                "typeroom": {
                    "description": "Typeroom holds the value of the typeroom edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.TypeRoom"
                }
            }
        },
        "ent.FixRoom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FixRoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FixRoomEdges"
                },
                "fix_detail": {
                    "description": "FixDetail holds the value of the \"fix_detail\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FixRoomEdges": {
            "type": "object",
            "properties": {
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Customer"
                },
                "furnitureDetail": {
                    "description": "FurnitureDetail holds the value of the furnitureDetail edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FurnitureDetail"
                },
                "room": {
                    "description": "Room holds the value of the room edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DataRoom"
                }
            }
        },
        "ent.Furniture": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FurnitureQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FurnitureEdges"
                },
                "furniture_name": {
                    "description": "FurnitureName holds the value of the \"furniture_name\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FurnitureDetail": {
            "type": "object",
            "properties": {
                "date_add": {
                    "description": "DateAdd holds the value of the \"date_add\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FurnitureDetailQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FurnitureDetailEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FurnitureDetailEdges": {
            "type": "object",
            "properties": {
                "fixs": {
                    "description": "Fixs holds the value of the fixs edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FixRoom"
                    }
                },
                "furnitures": {
                    "description": "Furnitures holds the value of the furnitures edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Furniture"
                },
                "rooms": {
                    "description": "Rooms holds the value of the rooms edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DataRoom"
                },
                "types": {
                    "description": "Types holds the value of the types edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FurnitureType"
                }
            }
        },
        "ent.FurnitureEdges": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "Details holds the value of the details edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FurnitureDetail"
                    }
                }
            }
        },
        "ent.FurnitureType": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the FurnitureTypeQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.FurnitureTypeEdges"
                },
                "furniture_type": {
                    "description": "FurnitureType holds the value of the \"furniture_type\" field.",
                    "type": "string"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.FurnitureTypeEdges": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "Details holds the value of the details edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.FurnitureDetail"
                    }
                }
            }
        },
        "ent.Promotion": {
            "type": "object",
            "properties": {
                "discount": {
                    "description": "Discount holds the value of the \"discount\" field.",
                    "type": "number"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the PromotionQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.PromotionEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "promotion_name": {
                    "description": "PromotionName holds the value of the \"promotion_name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.PromotionEdges": {
            "type": "object",
            "properties": {
                "datarooms": {
                    "description": "Datarooms holds the value of the datarooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.DataRoom"
                    }
                },
                "reserves": {
                    "description": "Reserves holds the value of the reserves edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.ReserveRoom"
                    }
                }
            }
        },
        "ent.ReserveRoom": {
            "type": "object",
            "properties": {
                "date_out": {
                    "description": "DateOut holds the value of the \"date_out\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the ReserveRoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.ReserveRoomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "net_price": {
                    "description": "NetPrice holds the value of the \"net_price\" field.",
                    "type": "number"
                },
                "reserve_date": {
                    "description": "ReserveDate holds the value of the \"reserve_date\" field.",
                    "type": "string"
                }
            }
        },
        "ent.ReserveRoomEdges": {
            "type": "object",
            "properties": {
                "checkins": {
                    "description": "Checkins holds the value of the checkins edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.CheckIn"
                    }
                },
                "customer": {
                    "description": "Customer holds the value of the customer edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Customer"
                },
                "promotion": {
                    "description": "Promotion holds the value of the promotion edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.Promotion"
                },
                "room": {
                    "description": "Room holds the value of the room edge.",
                    "type": "object",
                    "$ref": "#/definitions/ent.DataRoom"
                }
            }
        },
        "ent.Status": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description holds the value of the \"description\" field.",
                    "type": "string"
                },
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatusQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                }
            }
        },
        "ent.StatusEdges": {
            "type": "object",
            "properties": {
                "checkouts": {
                    "description": "Checkouts holds the value of the checkouts edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.Checkout"
                    }
                }
            }
        },
        "ent.StatusRoom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the StatusRoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.StatusRoomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "status_name": {
                    "description": "StatusName holds the value of the \"status_name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.StatusRoomEdges": {
            "type": "object",
            "properties": {
                "datarooms": {
                    "description": "Datarooms holds the value of the datarooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.DataRoom"
                    }
                }
            }
        },
        "ent.TypeRoom": {
            "type": "object",
            "properties": {
                "edges": {
                    "description": "Edges holds the relations/edges for other nodes in the graph.\nThe values are being populated by the TypeRoomQuery when eager-loading is set.",
                    "type": "object",
                    "$ref": "#/definitions/ent.TypeRoomEdges"
                },
                "id": {
                    "description": "ID of the ent.",
                    "type": "integer"
                },
                "type_name": {
                    "description": "TypeName holds the value of the \"type_name\" field.",
                    "type": "string"
                }
            }
        },
        "ent.TypeRoomEdges": {
            "type": "object",
            "properties": {
                "datarooms": {
                    "description": "Datarooms holds the value of the datarooms edge.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ent.DataRoom"
                    }
                }
            }
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "authorizationUrl": "",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    }
}